// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskMaster.Data;

#nullable disable

namespace TaskMaster.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250422220804_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TaskMaster.Models.Commentaire", b =>
                {
                    b.Property<int>("Id_Commentaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Commentaire"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Auteur")
                        .HasColumnType("int");

                    b.Property<int>("Id_Task")
                        .HasColumnType("int");

                    b.HasKey("Id_Commentaire");

                    b.HasIndex("Id_Auteur");

                    b.HasIndex("Id_Task");

                    b.ToTable("Commentaires");
                });

            modelBuilder.Entity("TaskMaster.Models.Projet", b =>
                {
                    b.Property<int>("Id_Projet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Projet"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("Id_Createur")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id_Projet");

                    b.HasIndex("Id_Createur");

                    b.ToTable("Projets");
                });

            modelBuilder.Entity("TaskMaster.Models.SubTask", b =>
                {
                    b.Property<int>("Id_SubTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_SubTask"));

                    b.Property<DateTime?>("Echeance")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_TaskParent")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_SubTask");

                    b.HasIndex("Id_TaskParent");

                    b.ToTable("SubTasks");
                });

            modelBuilder.Entity("TaskMaster.Models.TaskItem", b =>
                {
                    b.Property<int>("Id_Task")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_Task"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("Echeance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Etiquettes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Id_Auteur")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Projet")
                        .HasColumnType("int");

                    b.Property<int>("Id_Realisateur")
                        .HasColumnType("int");

                    b.Property<string>("Priorite")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_Task");

                    b.HasIndex("Id_Auteur");

                    b.HasIndex("Id_Projet");

                    b.HasIndex("Id_Realisateur");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskMaster.Models.User", b =>
                {
                    b.Property<int>("Id_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id_User"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id_User");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskMaster.Models.Commentaire", b =>
                {
                    b.HasOne("TaskMaster.Models.User", "Auteur")
                        .WithMany("Commentaires")
                        .HasForeignKey("Id_Auteur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaskMaster.Models.TaskItem", "Task")
                        .WithMany("Commentaires")
                        .HasForeignKey("Id_Task")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auteur");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskMaster.Models.Projet", b =>
                {
                    b.HasOne("TaskMaster.Models.User", "Createur")
                        .WithMany()
                        .HasForeignKey("Id_Createur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Createur");
                });

            modelBuilder.Entity("TaskMaster.Models.SubTask", b =>
                {
                    b.HasOne("TaskMaster.Models.TaskItem", "TaskParent")
                        .WithMany("SousTaches")
                        .HasForeignKey("Id_TaskParent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskParent");
                });

            modelBuilder.Entity("TaskMaster.Models.TaskItem", b =>
                {
                    b.HasOne("TaskMaster.Models.User", "Auteur")
                        .WithMany()
                        .HasForeignKey("Id_Auteur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TaskMaster.Models.Projet", "Projet")
                        .WithMany("Tasks")
                        .HasForeignKey("Id_Projet")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaskMaster.Models.User", "Realisateur")
                        .WithMany()
                        .HasForeignKey("Id_Realisateur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Auteur");

                    b.Navigation("Projet");

                    b.Navigation("Realisateur");
                });

            modelBuilder.Entity("TaskMaster.Models.Projet", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TaskMaster.Models.TaskItem", b =>
                {
                    b.Navigation("Commentaires");

                    b.Navigation("SousTaches");
                });

            modelBuilder.Entity("TaskMaster.Models.User", b =>
                {
                    b.Navigation("Commentaires");
                });
#pragma warning restore 612, 618
        }
    }
}
